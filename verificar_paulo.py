#!/usr/bin/env python
"""
Script para verificar e ajustar as prefer√™ncias do professor Paulo.
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'horarios_escolares.settings')
django.setup()

from core.models import Professor, PreferenciaProfessor, Disciplina, Horario

def main():
    print("=== AJUSTANDO PREFER√äNCIAS DO PAULO PARA ESW2 ===")
    
    # Buscar Paulo
    try:
        paulo = Professor.objects.get(nome_completo="Paulo")
        print(f"Professor encontrado: {paulo.nome_completo}")
    except Professor.DoesNotExist:
        print("Professor Paulo n√£o encontrado!")
        return
    
    # Buscar disciplina ESW2
    try:
        esw2 = Disciplina.objects.get(nome="ESW2")
        print(f"Disciplina encontrada: {esw2.nome}")
    except Disciplina.DoesNotExist:
        print("Disciplina ESW2 n√£o encontrada!")
        return
    
    # Verificar prefer√™ncias atuais
    prefs = PreferenciaProfessor.objects.filter(professor=paulo)
    print(f"\nTotal de prefer√™ncias atuais: {prefs.count()}")
    
    dias_semana = {0: 'Segunda', 1: 'Ter√ßa', 2: 'Quarta', 3: 'Quinta', 4: 'Sexta'}
    
    print("\n=== PREFER√äNCIAS ATUAIS ===")
    for pref in prefs:
        status = "DISPON√çVEL" if pref.disponivel else "INDISPON√çVEL"
        disciplina = pref.disciplina.nome if pref.disciplina else "Todas"
        print(f"{dias_semana[pref.dia_semana]} - {status} - {disciplina}")
    
    # Criar prefer√™ncias espec√≠ficas para ESW2 em Quinta e Sexta
    print("\n=== CRIANDO PREFER√äNCIAS PARA ESW2 ===")
    
    # Quinta-feira - ESW2 - DISPON√çVEL
    quinta_esw2, created = PreferenciaProfessor.objects.get_or_create(
        professor=paulo,
        dia_semana=3,  # Quinta
        disciplina=esw2,
        defaults={
            'disponivel': True,
            'preferencial': True,
            'prioridade': 1
        }
    )
    if created:
        print("‚úì Criada: Quinta-feira - DISPON√çVEL para ESW2")
    else:
        if not quinta_esw2.disponivel:
            quinta_esw2.disponivel = True
            quinta_esw2.save()
            print("‚úì Atualizada: Quinta-feira - DISPON√çVEL para ESW2")
        else:
            print("- Quinta-feira j√° DISPON√çVEL para ESW2")
    
    # Sexta-feira - ESW2 - DISPON√çVEL
    sexta_esw2, created = PreferenciaProfessor.objects.get_or_create(
        professor=paulo,
        dia_semana=4,  # Sexta
        disciplina=esw2,
        defaults={
            'disponivel': True,
            'preferencial': True,
            'prioridade': 1
        }
    )
    if created:
        print("‚úì Criada: Sexta-feira - DISPON√çVEL para ESW2")
    else:
        if not sexta_esw2.disponivel:
            sexta_esw2.disponivel = True
            sexta_esw2.save()
            print("‚úì Atualizada: Sexta-feira - DISPON√çVEL para ESW2")
        else:
            print("- Sexta-feira j√° DISPON√çVEL para ESW2")
    
    print("\n=== TESTANDO DISPONIBILIDADE ===")
    # Testar se Paulo est√° dispon√≠vel nos diferentes dias para ESW2
    for dia in range(5):  # Segunda a Sexta
        disponivel = paulo.disponivel_para_horario(dia_semana=dia, disciplina=esw2)
        status = "‚úÖ DISPON√çVEL" if disponivel else "‚ùå INDISPON√çVEL"
        print(f"{dias_semana[dia]} para ESW2: {status}")
    
    print("\n=== LIMPANDO HOR√ÅRIOS CONFLITANTES ===")
    # Remover hor√°rios conflitantes (Paulo em dias indispon√≠veis)
    horarios_conflitantes = Horario.objects.filter(
        professor=paulo,
        dia_semana__in=[0, 1, 2]  # Segunda, Ter√ßa, Quarta
    )
    
    if horarios_conflitantes.exists():
        print(f"Removendo {horarios_conflitantes.count()} hor√°rios conflitantes...")
        for h in horarios_conflitantes:
            print(f"  - Removido: {dias_semana[h.dia_semana]} - {h.turno} - {h.disciplina.nome}")
        horarios_conflitantes.delete()
        print("‚úì Hor√°rios conflitantes removidos")
    else:
        print("Nenhum hor√°rio conflitante encontrado")
    
    print("\n=== GERANDO NOVOS HOR√ÅRIOS ===")
    from core.algoritmo_horarios import GeradorHorarios
    gerador = GeradorHorarios()
    resultado = gerador.gerar_horarios()
    
    if resultado['sucesso']:
        print(f"‚úÖ Novos hor√°rios gerados: {resultado['horarios_criados']} hor√°rios")
        
        # Verificar novos hor√°rios do Paulo
        novos_horarios_paulo = Horario.objects.filter(professor=paulo)
        print(f"\nüìã Paulo agora tem {novos_horarios_paulo.count()} aulas:")
        
        for h in novos_horarios_paulo:
            print(f"   {dias_semana[h.dia_semana]} - {h.turno} - {h.disciplina.nome}")
        
        # Verificar se ainda h√° viola√ß√µes
        violacoes = novos_horarios_paulo.filter(dia_semana__in=[0, 1, 2])
        if violacoes.exists():
            print(f"\n‚ùå AINDA H√Å VIOLA√á√ïES: {violacoes.count()}")
            for v in violacoes:
                print(f"   {dias_semana[v.dia_semana]} - {v.turno} - {v.disciplina.nome}")
        else:
            print(f"\n‚úÖ SUCESSO! Paulo n√£o est√° mais em dias indispon√≠veis")
            
    else:
        print(f"‚ùå Erro ao gerar hor√°rios: {resultado.get('erro', 'Erro desconhecido')}")
        if resultado.get('conflitos'):
            for conflito in resultado['conflitos'][:3]:
                print(f"   - {conflito}")

if __name__ == "__main__":
    main()

def mostrar_todos_horarios():
    """Mostra todos os hor√°rios gerados"""
if __name__ == "__main__":
    main()
