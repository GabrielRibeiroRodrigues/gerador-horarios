#!/usr/bin/env python
"""
Teste do novo algoritmo de gera√ß√£o de hor√°rios.
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'horarios_escolares.settings')
django.setup()

from core.algoritmo_horarios import gerar_horarios_automaticamente
from core.models import Horario, Professor

def main():
    print("üîÑ TESTANDO NOVO ALGORITMO DE GERA√á√ÉO DE HOR√ÅRIOS")
    print("=" * 60)
    
    # Executar gera√ß√£o
    print("Iniciando gera√ß√£o de hor√°rios...")
    resultado = gerar_horarios_automaticamente(limpar_anteriores=True)
    
    print("\nüìä RESULTADO DA GERA√á√ÉO:")
    print(f"Sucesso: {'‚úÖ SIM' if resultado['sucesso'] else '‚ùå N√ÉO'}")
    print(f"Hor√°rios criados: {resultado['horarios_criados']}")
    print(f"Turmas processadas: {resultado['turmas_processadas']}")
    print(f"Tentativas: {resultado.get('tentativas', 'N/A')}")
    
    if resultado.get('erro'):
        print(f"\n‚ùå ERRO: {resultado['erro']}")
    
    if resultado['conflitos']:
        print(f"\n‚ö†Ô∏è CONFLITOS ({len(resultado['conflitos'])}):")
        for i, conflito in enumerate(resultado['conflitos'], 1):
            print(f"   {i}. {conflito}")
    
    # Verificar se Paulo est√° respeitando as prefer√™ncias
    if resultado['sucesso']:
        print(f"\nüë®‚Äçüè´ VERIFICA√á√ÉO DAS PREFER√äNCIAS DO PAULO:")
        try:
            paulo = Professor.objects.get(nome_completo="Paulo")
            horarios_paulo = Horario.objects.filter(professor=paulo)
            
            print(f"Paulo tem {horarios_paulo.count()} aulas agendadas:")
            
            dias_nomes = ['Segunda', 'Ter√ßa', 'Quarta', 'Quinta', 'Sexta']
            
            for h in horarios_paulo:
                dia_nome = dias_nomes[h.dia_semana]
                print(f"   {dia_nome} - {h.turno} - {h.disciplina.nome}")
            
            # Verificar viola√ß√µes (deve estar indispon√≠vel em Segunda, Ter√ßa, Quarta)
            violacoes = horarios_paulo.filter(dia_semana__in=[0, 1, 2])
            
            if violacoes.exists():
                print(f"\n‚ùå VIOLA√á√ïES ENCONTRADAS ({violacoes.count()}):")
                for v in violacoes:
                    dia_nome = dias_nomes[v.dia_semana]
                    print(f"   {dia_nome} - {v.turno} - {v.disciplina.nome}")
            else:
                print(f"\n‚úÖ SUCESSO! Paulo n√£o est√° agendado em dias indispon√≠veis!")
                
        except Professor.DoesNotExist:
            print("Professor Paulo n√£o encontrado")
        except Exception as e:
            print(f"Erro ao verificar Paulo: {e}")
    
    print("\n" + "=" * 60)
    print("üéØ TESTE CONCLU√çDO!")

if __name__ == "__main__":
    main()
