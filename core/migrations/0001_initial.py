# Generated by Django 5.2.4 on 2025-07-22 11:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo da disciplina', max_length=100, verbose_name='Nome da Disciplina')),
                ('carga_horaria_semanal', models.PositiveIntegerField(help_text='Número de aulas por semana', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Carga Horária Semanal')),
                ('curso_area', models.CharField(help_text='Curso ou área da disciplina', max_length=100, verbose_name='Curso/Área')),
                ('periodo_serie', models.CharField(help_text='Período ou série da disciplina', max_length=50, verbose_name='Período/Série')),
                ('ativa', models.BooleanField(default=True, help_text='Se a disciplina está ativa no sistema', verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_numero', models.CharField(help_text='Nome ou número identificador da sala', max_length=50, verbose_name='Nome/Número da Sala')),
                ('tipo', models.CharField(choices=[('normal', 'Sala Normal'), ('laboratorio', 'Laboratório'), ('auditorio', 'Auditório')], default='normal', help_text='Tipo da sala de aula', max_length=20, verbose_name='Tipo da Sala')),
                ('capacidade', models.PositiveIntegerField(help_text='Capacidade máxima de alunos', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)], verbose_name='Capacidade')),
                ('ativa', models.BooleanField(default=True, help_text='Se a sala está ativa no sistema', verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Salas',
                'ordering': ['nome_numero'],
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(help_text='Nome completo do professor', max_length=150, verbose_name='Nome Completo')),
                ('ativo', models.BooleanField(default=True, help_text='Se o professor está ativo no sistema', verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('disciplinas', models.ManyToManyField(blank=True, help_text='Disciplinas que o professor pode lecionar', to='core.disciplina', verbose_name='Disciplinas')),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_codigo', models.CharField(help_text='Nome ou código identificador da turma', max_length=50, verbose_name='Nome/Código')),
                ('serie_periodo', models.CharField(help_text='Série ou período da turma', max_length=50, verbose_name='Série/Período')),
                ('numero_alunos', models.PositiveIntegerField(help_text='Quantidade de alunos na turma', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Número de Alunos')),
                ('ativa', models.BooleanField(default=True, help_text='Se a turma está ativa no sistema', verbose_name='Ativa')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('disciplinas', models.ManyToManyField(blank=True, help_text='Disciplinas cursadas pela turma', to='core.disciplina', verbose_name='Disciplinas')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
                'ordering': ['nome_codigo'],
            },
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Segunda-feira'), (1, 'Terça-feira'), (2, 'Quarta-feira'), (3, 'Quinta-feira'), (4, 'Sexta-feira'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='Dia da Semana')),
                ('turno', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite')], max_length=10, verbose_name='Turno')),
                ('horario_inicio', models.TimeField(verbose_name='Horário de Início')),
                ('horario_fim', models.TimeField(verbose_name='Horário de Fim')),
                ('ativo', models.BooleanField(default=True, help_text='Se o horário está ativo', verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.disciplina', verbose_name='Disciplina')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.professor', verbose_name='Professor')),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.sala', verbose_name='Sala')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.turma', verbose_name='Turma')),
            ],
            options={
                'verbose_name': 'Horário',
                'verbose_name_plural': 'Horários',
                'ordering': ['dia_semana', 'horario_inicio'],
            },
        ),
        migrations.CreateModel(
            name='PreferenciaProfessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Segunda-feira'), (1, 'Terça-feira'), (2, 'Quarta-feira'), (3, 'Quinta-feira'), (4, 'Sexta-feira'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='Dia da Semana')),
                ('turno', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite')], max_length=10, verbose_name='Turno')),
                ('disponivel', models.BooleanField(default=True, help_text='Se o professor está disponível neste horário', verbose_name='Disponível')),
                ('preferencial', models.BooleanField(default=False, help_text='Se é um horário preferencial para o professor', verbose_name='Preferencial')),
                ('observacoes', models.TextField(blank=True, help_text='Observações adicionais sobre este horário', verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferencias', to='core.professor', verbose_name='Professor')),
            ],
            options={
                'verbose_name': 'Preferência do Professor',
                'verbose_name_plural': 'Preferências dos Professores',
                'ordering': ['professor', 'dia_semana', 'turno'],
                'unique_together': {('professor', 'dia_semana', 'turno')},
            },
        ),
    ]
