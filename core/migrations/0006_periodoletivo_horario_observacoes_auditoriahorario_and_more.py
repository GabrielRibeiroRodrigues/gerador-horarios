# Generated by Django 5.2.4 on 2025-07-28 12:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_adicionar_bloqueios_e_turnos_turma'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PeriodoLetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Ex: 2024.1, 2024.2, 1º Semestre 2024', max_length=100, verbose_name='Nome do Período')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do período letivo', verbose_name='Descrição')),
                ('tipo_periodo', models.CharField(choices=[('semestre', 'Semestre'), ('trimestre', 'Trimestre'), ('anual', 'Anual'), ('bimestre', 'Bimestre')], default='semestre', help_text='Tipo do período letivo', max_length=20, verbose_name='Tipo de Período')),
                ('data_inicio', models.DateField(help_text='Data de início do período letivo', verbose_name='Data de Início')),
                ('data_fim', models.DateField(help_text='Data de fim do período letivo', verbose_name='Data de Fim')),
                ('ativo', models.BooleanField(default=False, help_text='Apenas um período pode estar ativo por vez', verbose_name='Período Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Período Letivo',
                'verbose_name_plural': 'Períodos Letivos',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.AddField(
            model_name='horario',
            name='observacoes',
            field=models.TextField(blank=True, help_text='Observações sobre este horário específico', verbose_name='Observações'),
        ),
        migrations.CreateModel(
            name='AuditoriaHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(choices=[('criado', 'Criado'), ('modificado', 'Modificado'), ('movido', 'Movido'), ('deletado', 'Deletado'), ('ativado', 'Ativado'), ('desativado', 'Desativado')], max_length=20, verbose_name='Ação Realizada')),
                ('dados_anteriores', models.JSONField(blank=True, help_text='Estado anterior do horário (JSON)', null=True, verbose_name='Dados Anteriores')),
                ('dados_novos', models.JSONField(blank=True, help_text='Estado novo do horário (JSON)', null=True, verbose_name='Dados Novos')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a mudança', verbose_name='Observações')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('horario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auditorias', to='core.horario', verbose_name='Horário')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Auditoria de Horário',
                'verbose_name_plural': 'Auditorias de Horários',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EventoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome ou descrição do evento', max_length=200, verbose_name='Nome do Evento')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do evento', verbose_name='Descrição')),
                ('tipo_evento', models.CharField(choices=[('feriado', 'Feriado'), ('recesso', 'Recesso'), ('prova', 'Período de Provas'), ('evento', 'Evento Especial'), ('reuniao', 'Reunião/Conselho'), ('formatura', 'Formatura'), ('outro', 'Outro')], default='evento', max_length=20, verbose_name='Tipo de Evento')),
                ('data_inicio', models.DateField(help_text='Data de início do evento', verbose_name='Data de Início')),
                ('data_fim', models.DateField(help_text='Data de fim do evento (igual ao início para eventos de um dia)', verbose_name='Data de Fim')),
                ('hora_inicio', models.TimeField(blank=True, help_text='Hora de início (deixe vazio para o dia todo)', null=True, verbose_name='Hora de Início')),
                ('hora_fim', models.TimeField(blank=True, help_text='Hora de fim (deixe vazio para o dia todo)', null=True, verbose_name='Hora de Fim')),
                ('afeta_aulas', models.BooleanField(default=True, help_text='Se este evento impede a realização de aulas', verbose_name='Afeta Aulas')),
                ('turnos_afetados', models.CharField(blank=True, help_text="Turnos afetados (deixe vazio para todos). Ex: 'manha,tarde'", max_length=50, verbose_name='Turnos Afetados')),
                ('ativo', models.BooleanField(default=True, help_text='Se o evento está ativo no sistema', verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('periodo_letivo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='core.periodoletivo', verbose_name='Período Letivo')),
            ],
            options={
                'verbose_name': 'Evento Acadêmico',
                'verbose_name_plural': 'Eventos Acadêmicos',
                'ordering': ['data_inicio'],
            },
        ),
        migrations.AddField(
            model_name='horario',
            name='periodo_letivo',
            field=models.ForeignKey(blank=True, help_text='Período letivo deste horário', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.periodoletivo', verbose_name='Período Letivo'),
        ),
        migrations.AlterUniqueTogether(
            name='horario',
            unique_together={('professor', 'dia_semana', 'horario_inicio', 'horario_fim', 'periodo_letivo'), ('sala', 'dia_semana', 'horario_inicio', 'horario_fim', 'periodo_letivo'), ('turma', 'dia_semana', 'horario_inicio', 'horario_fim', 'periodo_letivo')},
        ),
        migrations.CreateModel(
            name='NotificacaoSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título da notificação', max_length=200, verbose_name='Título')),
                ('mensagem', models.TextField(help_text='Conteúdo da notificação', verbose_name='Mensagem')),
                ('tipo', models.CharField(choices=[('conflito', 'Conflito de Horários'), ('mudanca', 'Mudança de Horário'), ('evento', 'Evento Acadêmico'), ('sistema', 'Sistema'), ('aviso', 'Aviso Geral'), ('erro', 'Erro')], default='aviso', max_length=20, verbose_name='Tipo de Notificação')),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('normal', 'Normal'), ('alta', 'Alta'), ('critica', 'Crítica')], default='normal', max_length=20, verbose_name='Prioridade')),
                ('lida', models.BooleanField(default=False, help_text='Se a notificação foi lida pelo usuário', verbose_name='Lida')),
                ('data_leitura', models.DateTimeField(blank=True, null=True, verbose_name='Data de Leitura')),
                ('link_acao', models.URLField(blank=True, help_text='Link para ação relacionada à notificação', verbose_name='Link de Ação')),
                ('dados_contexto', models.JSONField(blank=True, help_text='Dados adicionais sobre a notificação (JSON)', null=True, verbose_name='Dados de Contexto')),
                ('ativa', models.BooleanField(default=True, help_text='Se a notificação está ativa no sistema', verbose_name='Ativa')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_expiracao', models.DateTimeField(blank=True, help_text='Data em que a notificação expira (opcional)', null=True, verbose_name='Data de Expiração')),
                ('usuario', models.ForeignKey(blank=True, help_text='Usuário específico (vazio = notificação global)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação do Sistema',
                'verbose_name_plural': 'Notificações do Sistema',
                'ordering': ['-data_criacao'],
                'indexes': [models.Index(fields=['usuario', 'lida'], name='core_notifi_usuario_a09218_idx'), models.Index(fields=['tipo', 'prioridade'], name='core_notifi_tipo_d6e97d_idx'), models.Index(fields=['data_criacao'], name='core_notifi_data_cr_16315b_idx')],
            },
        ),
    ]
